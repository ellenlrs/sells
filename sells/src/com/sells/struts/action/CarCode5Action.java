/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.sells.struts.action;

import javax.servlet.ServletContext;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;
import org.apache.commons.lang.StringUtils;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionError;
import org.apache.struts.action.ActionErrors;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.action.ActionServlet;
import org.springframework.web.context.WebApplicationContext;
import org.springframework.web.context.support.WebApplicationContextUtils;
import com.sells.common.util.EcServer;
import com.sells.dao.LoginData;
import com.sells.dao.Sells;
import com.sells.service.imp.SellsService;

/** 
 * MyEclipse Struts
 * Creation date: 06-12-2007
 * 
 * XDoclet definition:
 * @struts.action validate="true"
 * @struts.action-forward name="success" path="/carCode5.jsp"
 */
public class CarCode5Action extends Action {
  private SellsService sellsService ;
  private Log log = LogFactory.getLog(CarCode5Action.class);
  private ServletContext servletContext;
  
  /* (non-Javadoc)
   * @see org.apache.struts.action.Action#setServlet(org.apache.struts.action.ActionServlet)
   */
  public void setServlet(ActionServlet actionServlet) {
      super.setServlet(actionServlet);
      servletContext = actionServlet.getServletContext();
      WebApplicationContext wac = WebApplicationContextUtils
              .getRequiredWebApplicationContext(servletContext);
      this.sellsService =  (SellsService) wac.getBean("sellsService");
  }

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
    HttpSession session = request.getSession ();
    ActionErrors errors = new ActionErrors();
    try {
      Sells sells= (Sells) session.getAttribute("sells") ;
      LoginData loginvo = (LoginData) session.getAttribute("loginvo") ;
      if (sells == null ) {
        return mapping.findForward("sessionLost");
      } else {
        Sells admin = sellsService.findSellsById(EcServer.getAdminNo());
        /*
        <a href=''><img src="file:///D|/JavaWork/workspace2/Sells/WebRoot/images/cart13.jpg" width="90" height="24" /></a>
         */
        StringBuffer sb= new StringBuffer();

        sb.append("<a href='").append(admin.getHomepage()).append("/Sells/shopcar.do?func=VIEW&sells=").append(sells.getSellsNo()).append("' ");
        if (StringUtils.defaultString(request.getParameter("target")).equals("_blank") ) {
          sb.append(" target='_blank' ") ;
        }
        if ( StringUtils.defaultString(request.getParameter("carImg")).equals("text")) {
          sb.append("><font size=2>").append(StringUtils.defaultString(request.getParameter("carText"))).append("</font></a>");
        } else if ( StringUtils.defaultString(request.getParameter("carImg")).equals("userImg")) {
          sb.append("><img src=\"").append(StringUtils.defaultString(request.getParameter("userImg"))).append("\" border=\"0\" ></a>");
        } else{
          sb.append("><img src='").append(admin.getHomepage()).append("/Sells/");
          sb.append(StringUtils.defaultString(request.getParameter("carImg"))).append("' border=\"0\"></a>");
        }
        request.setAttribute("target", request.getParameter("target"));
        request.setAttribute("carImg", request.getParameter("carImg"));
        request.setAttribute("userImg", request.getParameter("userImg"));
        request.setAttribute("carText", request.getParameter("carText"));
        request.setAttribute("car", sb.toString());
        sb.setLength(0);
        sb = null ;
        return mapping.findForward("success");
      }
    } catch (Exception e ) {
      errors.add("errMsg", new ActionError("alert.Error", "輸入的資料有誤，請重新檢查後再送出!"));
      saveErrors(request, errors);
      return mapping.findForward("error1");
    }
	}
}