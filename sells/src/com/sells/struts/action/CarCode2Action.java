/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.sells.struts.action;

import javax.servlet.ServletContext;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;
import org.apache.commons.lang.StringUtils;
import org.apache.commons.lang.math.NumberUtils;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionError;
import org.apache.struts.action.ActionErrors;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.action.ActionServlet;
import org.springframework.web.context.WebApplicationContext;
import org.springframework.web.context.support.WebApplicationContextUtils;
import com.sells.common.util.EcServer;
import com.sells.dao.LoginData;
import com.sells.dao.Sells;
import com.sells.service.imp.SellsService;

/** 
 * MyEclipse Struts
 * Creation date: 02-14-2007
 * 
 * XDoclet definition:
 * @struts.action validate="true"
 * @struts.action-forward name="success" path="/carCode2.jsp"
 */
public class CarCode2Action extends Action {
  private SellsService sellsService ;
  private Log log = LogFactory.getLog(CarCode2Action.class);
  private ServletContext servletContext;
  
  /* (non-Javadoc)
   * @see org.apache.struts.action.Action#setServlet(org.apache.struts.action.ActionServlet)
   */
  public void setServlet(ActionServlet actionServlet) {
      super.setServlet(actionServlet);
      servletContext = actionServlet.getServletContext();
      WebApplicationContext wac = WebApplicationContextUtils
              .getRequiredWebApplicationContext(servletContext);
      this.sellsService =  (SellsService) wac.getBean("sellsService");
  }

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
    HttpSession session = request.getSession ();
    ActionErrors errors = new ActionErrors();
    try {
      Sells sells= (Sells) session.getAttribute("sells") ;
      LoginData loginvo = (LoginData) session.getAttribute("loginvo") ;
      if (sells == null ) {
        return mapping.findForward("sessionLost");
      } else {
        if ( StringUtils.isBlank(request.getParameter("itemNo"))) {
          errors.add("errMsg", new ActionError("alert.Error", "商品編號 未輸入!"));
          saveErrors(request, errors);
          return mapping.findForward("error1");
        }
        if ( StringUtils.isBlank(request.getParameter("itemNm"))) {
          errors.add("errMsg", new ActionError("alert.Error", "商品名稱 未輸入!"));
          saveErrors(request, errors);
          return mapping.findForward("error1");
        }
        if ( StringUtils.isBlank(request.getParameter("price"))) {
          errors.add("errMsg", new ActionError("alert.Error", "商品價格 未輸入!"));
          saveErrors(request, errors);
          return mapping.findForward("error1");
        }
        if ( ! NumberUtils.isNumber(request.getParameter("price"))) {
          errors.add("errMsg", new ActionError("alert.Error", "商品價格 請輸入數字!"));
          saveErrors(request, errors);
          return mapping.findForward("error1");
        }
        if ( NumberUtils.createInteger(request.getParameter("price")) <= 0) {
          errors.add("errMsg", new ActionError("alert.Error", "商品價格 需要大於 0 !"));
          saveErrors(request, errors);
          return mapping.findForward("error1");
        }
        Sells admin = sellsService.findSellsById(EcServer.getAdminNo());
        String[] spec1 = StringUtils.defaultString(request.getParameter("spec1")).split(";");
        String[] spec2 = StringUtils.defaultString(request.getParameter("spec2")).split(";");
        /*
<table width=300>
  <tr>
    <td> 名稱 <b>(No.品編號)</b>
      <hr size="1" color="#C0C0C0" noshade>
      商品說明 <br>
      <br>
      <B><font color=#ff0000>價格︰800元</font></B>
      <form method=post action=http://www.bidder.cc/cart_p.asp>
        <input type=hidden name=itemNo value=品編號>
        <input type=hidden name=itemNm value=名稱>
        <input type=hidden name=price value=800>
        <input type=hidden name=qty value=1>
        <input type=hidden name=sells value=jinwei>
        <select size=1 name=spec1>
          <option value=白色>白色</option>
          <option value=紅色>紅色</option>
          <option value=綠色>綠色</option>
          <option value=粉色>粉色</option>
        </select>
        <select name=spec2>
          <option value=S>S</option>
          <option value=M>M</option>
          <option value=L>L</option>
          <option value=XL>XL</option>
        </select>
        <input type=submit value=加入我的購物車>
      </form></td>
  </tr>
</table>
         */
        //String web = StringUtils.defaultString(request.getParameter("web")) ;
        String web = "utf-8";
        StringBuffer sb= new StringBuffer();
        if ( !web.equals("utf-8")) {
          sb.append("<script src='").append(admin.getHomepage()).append("/Sells/cart.js'></script>");
        }
        sb.append("<table width=300><tr><td><font size=2>").append(request.getParameter("itemNm")).append("<b>");
        sb.append(request.getParameter("itemNo")).append("</b>\n");
        sb.append("<hr size=\"1\" color=\"#C0C0C0\" noshade>");
        if ( StringUtils.isNotBlank(request.getParameter("desc"))) {
          sb.append(request.getParameter("desc")).append("<br />");
        }
        sb.append("<br />\n");
        sb.append("<B><font color=#ff0000>價格︰").append(request.getParameter("price")).append("元</font></B></font>\n");
        sb.append("<form method=post name='shop_cart' action='").append(admin.getHomepage()).append("/Sells/shopcar.do' >");
        sb.append("<input type=hidden name=itemNo value=\"");
        sb.append(request.getParameter("itemNo")).append("\">");
        sb.append("<input type=hidden name=itemNm value=\"");
        sb.append(request.getParameter("itemNm")).append("\">");
        sb.append("<input type=hidden name=price value=\"");
        sb.append(request.getParameter("price")).append("\">");
        sb.append("<input type=hidden name=qty value=\"1\">");
        sb.append("<input type=hidden name=sells value=\"");
        sb.append(sells.getSellsNo()).append("\">");
        sb.append("<input type=hidden name='target' value=\"");
        sb.append(request.getParameter("target")).append("\">");
        if (spec1 != null) {
          if (StringUtils.isNotBlank(request.getParameter("spec1")) ) {
            sb.append("<select name=spec1>");
            for(int i =0 ;i<spec1.length;i++) {
              sb.append("<option value=\"");
              sb.append(spec1[i]).append("\">").append(spec1[i]).append("</option>");
            }
            sb.append("</select>");
          }
        }
        
        if (spec2 != null) {
          if (StringUtils.isNotBlank(request.getParameter("spec2")) ) {
            sb.append("<select name=spec2>");
            for(int i =0 ;i<spec2.length;i++) {
              sb.append("<option value=\"");
              sb.append(spec2[i]).append("\">").append(spec2[i]).append("</option>");
            }
            sb.append("</select>");
          }
        }
        sb.append("<BR><BR>");
        if ( web.equals("utf-8")) {
          if ( StringUtils.defaultString(request.getParameter("carImg")).equals("text")) {
            sb.append("<input type=submit value=").append(StringUtils.defaultString(request.getParameter("carText"))).append(">\n");
          } else if ( StringUtils.defaultString(request.getParameter("carImg")).equals("userImg")) {
            sb.append("<input type=\"image\" src=\"").append(StringUtils.defaultString(request.getParameter("userImg"))).append("\" border=\"0\" >\n");
          } else {
            sb.append("<input type=\"image\" src=\"").append(admin.getHomepage()).append("/Sells/");
            sb.append(StringUtils.defaultString(request.getParameter("carImg"))).append("\" border=\"0\">\n");
          }
        } else {
          if ( StringUtils.defaultString(request.getParameter("carImg")).equals("text")) {
            sb.append("<input type=button onClick='addCartForm(this.form);' value=").append(StringUtils.defaultString(request.getParameter("carText"))).append(">\n");
          } else if ( StringUtils.defaultString(request.getParameter("carImg")).equals("userImg")) {
            sb.append("<a href='#'><img onClick='addCartForm(document.shop_cart);' src=\"").append(StringUtils.defaultString(request.getParameter("userImg"))).append("\" border=\"0\" ></a>\n");
          } else {
            sb.append("<a href='#'><img onClick='addCartForm(document.shop_cart);' src='").append(admin.getHomepage()).append("/Sells/");
            sb.append(StringUtils.defaultString(request.getParameter("carImg"))).append("' border=0></a>\n");
          }
        }
        sb.append("</form></td></tr></table>");
        request.setAttribute("userImg", request.getParameter("userImg"));
        request.setAttribute("web", request.getParameter("web"));
        request.setAttribute("itemNo", request.getParameter("itemNo"));
        request.setAttribute("itemNm", request.getParameter("itemNm"));
        request.setAttribute("desc", request.getParameter("desc"));
        request.setAttribute("spec1", request.getParameter("spec1"));
        request.setAttribute("spec2", request.getParameter("spec2"));
        request.setAttribute("price", request.getParameter("price"));
        request.setAttribute("target", request.getParameter("target"));
        request.setAttribute("carImg", request.getParameter("carImg"));
        request.setAttribute("carText", request.getParameter("carText"));
        request.setAttribute("car", sb.toString());
        sb.setLength(0);
        sb = null ;

        return mapping.findForward("success");
      }
    } catch (Exception e ) {
      errors.add("errMsg", new ActionError("alert.Error", "輸入的資料有誤，請重新檢查後再送出!"));
      saveErrors(request, errors);
      return mapping.findForward("error1");
    }
	}
}