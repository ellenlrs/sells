/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.sells.struts.action;

import javax.servlet.ServletContext;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.commons.lang.StringUtils;
import org.apache.commons.lang.math.NumberUtils;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionError;
import org.apache.struts.action.ActionErrors;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.action.ActionServlet;
import org.springframework.web.context.WebApplicationContext;
import org.springframework.web.context.support.WebApplicationContextUtils;

import com.sells.common.util.EcServer;
import com.sells.dao.LoginData;
import com.sells.dao.Sells;
import com.sells.service.imp.SellsService;

/** 
 * MyEclipse Struts
 * Creation date: 02-14-2007
 * 
 * XDoclet definition:
 * @struts.action validate="true"
 * @struts.action-forward name="success" path="/carCode3.jsp"
 */
public class CarCode3Action extends Action {
  private SellsService sellsService ;
  private Log log = LogFactory.getLog(CarCode3Action.class);
  private ServletContext servletContext;
  
  /* (non-Javadoc)
   * @see org.apache.struts.action.Action#setServlet(org.apache.struts.action.ActionServlet)
   */
  public void setServlet(ActionServlet actionServlet) {
      super.setServlet(actionServlet);
      servletContext = actionServlet.getServletContext();
      WebApplicationContext wac = WebApplicationContextUtils
              .getRequiredWebApplicationContext(servletContext);
      this.sellsService =  (SellsService) wac.getBean("sellsService");
  }

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
    HttpSession session = request.getSession ();
    ActionErrors errors = new ActionErrors();
    try {
      Sells sells= (Sells) session.getAttribute("sells") ;
      LoginData loginvo = (LoginData) session.getAttribute("loginvo") ;
      if (sells == null ) {
        return mapping.findForward("sessionLost");
      } else {
        if ( StringUtils.isBlank(request.getParameter("itemList"))) {
          errors.add("errMsg", new ActionError("alert.Error", "商品列表 未輸入!"));
          saveErrors(request, errors);
          return mapping.findForward("error1");
        }

        Sells admin = sellsService.findSellsById(EcServer.getAdminNo());
        String[] itemList = StringUtils.defaultString(request.getParameter("itemList")).split("\r\n");
        
        /*
<table border="0" width="100%" cellspacing="1" cellpadding="1" bgcolor="FDDBDC">
  <tr>
    <td width="15%" bgcolor="#FFFFFF" align="center">編號</td>
    <td width="60%" bgcolor="#FFFFFF" align="center">名稱</td>
    <td width="15%" bgcolor="#FFFFFF" align="center">售價</td>
    <td width="10%" bgcolor="#FFFFFF" align="center">訂購</td>
  </tr>
  <tr>
    <td bgcolor=ffffff align=center>B0002</td>
    <td bgcolor=ffffff>長褲 黑色 M</td>
    <td bgcolor=ffffff align=center>500</td>
    <td bgcolor=ffffff align=center><a href=http://www.bidder.cc/cart_p.asp?pno=B0002&pname=%AA%F8%BF%C7&p1=%B6%C2%A6%E2&p2=M&price=500&num=1&sellerid=jinwei>訂購</a></td>
  </tr>
</table>
         */
        StringBuffer sb= new StringBuffer();
        //String web = StringUtils.defaultString(request.getParameter("web")) ;
        String web = "utf-8";
        if ( !web.equals("utf-8")) {
          sb.append("<script src='").append(admin.getHomepage()).append("/Sells/cart.js'></script>");
        }
        sb.append("<font size=\"2\"><table border=\"0\" width=\"100%\" cellspacing=\"1\" cellpadding=\"1\" bgcolor=\"#9BCFFF\">");
        sb.append("<tr><td width=\"15%\" height=\"28\" bgcolor=\"#FFFFFF\" align=\"center\"><font size=2>編號</font></td>");
        sb.append("<td width=\"60%\" bgcolor=\"#FFFFFF\" align=\"center\"><font size=2>名稱</font></td>");
        sb.append("<td width=\"15%\" bgcolor=\"#FFFFFF\" align=\"center\"><font size=2>售價</font></td>");
        sb.append("<td width=\"10%\" bgcolor=\"#FFFFFF\" align=\"center\"><font size=2>訂購</font></td></tr>");
        if (itemList != null ) {
          for  (int i=0 ; i<itemList.length ; i++) {
            String item[] = itemList[i].split(",");
            if (item != null) {
              sb.append("<tr><td bgcolor=\"#FFFFFF\" height=\"28\" align=center><font size=2>").append(item[0]).append("</font></td>");
              sb.append("<td bgcolor=\"#FFFFFF\" ><font size=2>").append(item[1]).append(" ").append(item[2]).append(" ").append(item[3]).append("</font></td>");
              sb.append("<td bgcolor=\"#FFFFFF\"  align=center><font size=2>").append(item[4]).append("</font></td>");
              sb.append("<td bgcolor=\"#FFFFFF\"  align=center>");
              if ( web.equals("utf-8")) {
                sb.append("<a href='").append(admin.getHomepage()).append("/Sells/shopcar.do?itemNo=");
                sb.append(java.net.URLEncoder.encode(item[0],"Utf-8"));
                sb.append("&itemNm=").append(java.net.URLEncoder.encode(item[1],"Utf-8"));
                sb.append("&spec1=").append(java.net.URLEncoder.encode(item[2],"Utf-8"));
                sb.append("&spec2=").append(java.net.URLEncoder.encode(item[3],"Utf-8"));
                sb.append("&price=").append(item[4]);
                log.info("item4:"+item[4]);
                if ( ! NumberUtils.isNumber(item[4])) {
                  errors.add("errMsg", new ActionError("alert.Error", "商品價格 請輸入數字!"));
                  saveErrors(request, errors);
                  return mapping.findForward("error1");
                }
                if (!sells.getSellsNo().equals("S0000000136")) {
                  if ( NumberUtils.createInteger(item[4]) <= 0) {
                    errors.add("errMsg", new ActionError("alert.Error", "商品價格 需要大於 0 !"));
                    saveErrors(request, errors);
                    return mapping.findForward("error1");
                  }
                }
                sb.append("&qty=1&sells=").append(sells.getSellsNo()).append("' ");
                if (StringUtils.defaultString(request.getParameter("target")).equals("_blank") ) {
                  sb.append(" target='_blank' ") ;
                }
                
//                sb.append("<a href='").append(admin.getHomepage()).append("/Sells/shopcar.do?itemNo=");
//                sb.append(item[0]);
//                sb.append("&itemNm=").append(item[1]);
//                sb.append("&spec1=").append(item[2]);
//                sb.append("&spec2=").append(item[3]);
//                sb.append("&price=").append(item[4]);
//                log.info("item4:"+item[4]);
//                if ( ! NumberUtils.isNumber(item[4])) {
//                  errors.add("errMsg", new ActionError("alert.Error", "商品價格 請輸入數字!"));
//                  saveErrors(request, errors);
//                  return mapping.findForward("error1");
//                }
//                if ( NumberUtils.createInteger(item[4]) <= 0) {
//                  errors.add("errMsg", new ActionError("alert.Error", "商品價格 需要大於 0 !"));
//                  saveErrors(request, errors);
//                  return mapping.findForward("error1");
//                }
//                sb.append("&qty=1&sells=").append(sells.getSellsNo()).append("' ");
//                if (StringUtils.defaultString(request.getParameter("target")).equals("_blank") ) {
//                  sb.append(" target='_blank' ") ;
//                }
              } else {
                sb.append("<a href=\"javascript:addCart('").append(item[0]).append("','");//itemNo
                sb.append(item[1]).append("','");//itemNm
                sb.append(item[2]).append("','");//spec1
                sb.append(item[3]).append("','");//spec2
                sb.append(item[4]).append("','");//price
                sb.append(sells.getSellsNo()).append("','");
                sb.append(request.getParameter("target")).append("')\"");
                sb.append("&price=").append(item[4]);
                if ( ! NumberUtils.isNumber(item[4])) {
                  errors.add("errMsg", new ActionError("alert.Error", "商品價格 請輸入數字!"));
                  saveErrors(request, errors);
                  return mapping.findForward("error1");
                }
                if (!sells.getSellsNo().equals("S0000000136")) {
                  if ( NumberUtils.createInteger(item[4]) <= 0) {
                    errors.add("errMsg", new ActionError("alert.Error", "商品價格 需要大於 0 !"));
                    saveErrors(request, errors);
                    return mapping.findForward("error1");
                  }
                }
              }
              if ( StringUtils.defaultString(request.getParameter("carImg")).equals("text")) {
                sb.append("><font size=2>").append(StringUtils.defaultString(request.getParameter("carText"))).append("</font>");
              }  else if ( StringUtils.defaultString(request.getParameter("carImg")).equals("userImg")) {
                sb.append("><img src=\"").append(StringUtils.defaultString(request.getParameter("userImg"))).append("\" border=\"0\" >");
              }else {
                sb.append("><img src='").append(admin.getHomepage()).append("/Sells/");
                sb.append(StringUtils.defaultString(request.getParameter("carImg"))).append("' border=\"0\">");
              }
              sb.append("</a></td></tr>");
            }
          }
        }
        sb.append("</table></font>");
        
        request.setAttribute("itemList", request.getParameter("itemList"));
        request.setAttribute("target", request.getParameter("target"));
        request.setAttribute("userImg", request.getParameter("userImg"));
        request.setAttribute("carImg", request.getParameter("carImg"));
        request.setAttribute("web", request.getParameter("web"));
        request.setAttribute("carText", request.getParameter("carText"));
        request.setAttribute("car", sb.toString());
        sb.setLength(0);
        sb = null ;

        return mapping.findForward("success");
      }
    } catch (Exception e ) {
      errors.add("errMsg", new ActionError("alert.Error", "輸入的資料有誤，請重新檢查後再送出!"));
      saveErrors(request, errors);
      return mapping.findForward("error1");
      
    }
	}
}